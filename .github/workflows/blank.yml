name: Backend test

on: [push, pull_request]

jobs:
  unittest:

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ startsWith(matrix.onnx-version, 'git+') }}

    strategy:
      matrix:
        # Test current versions on all platforms
        # - use oldest and latest supported python versions
        # - use pinned versions for current onnx-tf release
        os: [ubuntu-latest]
        python-version: [3.8]
        onnx-version: ['git+https://github.com/onnx/onnx.git@master']
        tensorflow-version: ['tensorflow-cpu==2.4.1 tensorflow-addons==0.12.0']

    steps:
    - name: Checkout ONNX-TF
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - # protobuf is required only when ONNX is built from source
      name: Install protobuf
      if: ${{ matrix.os == 'ubuntu-latest' && startsWith(matrix.onnx-version, 'git+') }}
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        tmp_dir=$(mktemp -d)
        git clone https://github.com/onnx/onnx.git $tmp_dir
        cd $tmp_dir
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
        # Build wheel
        docker run --rm -v $(pwd):/github/workspace --workdir /github/workspace --entrypoint bash \
        quay.io/pypa/manylinux2010_x86_64 .github/workflows/manylinux/entrypoint.sh ${{ matrix.python-version }} manylinux2010_x86_64 pull_request
        # Install wheel
        pip install dist/*manylinux2010_x86_64.whl  
    - name: Install dependencies, ONNX ${{ matrix.onnx-version }}
      run: |
        pip install pytest tabulate ${{ matrix.tensorflow-version }}
        pip install ${{ matrix.onnx-version }}
        pip install -e .
    - name: Run Backend tests
      run: |
        python -m unittest discover test -v
