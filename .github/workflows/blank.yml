name: Backend test

on: [push, pull_request]

jobs:
  unittest:

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ startsWith(matrix.onnx-version, 'git+') }}

    strategy:
      matrix:
        # Test current versions on all platforms
        # - use oldest and latest supported python versions
        # - use pinned versions for current onnx-tf release
        os: [ubuntu-latest]
        python-version: [3.8]
        onnx-version: ['git+https://github.com/onnx/onnx.git@master']
        tensorflow-version: ['tensorflow-cpu==2.4.1 tensorflow-addons==0.12.0']

    steps:
    - name: Checkout ONNX-TF
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - # protobuf is required only when ONNX is built from source
      name: Install protobuf
      if: ${{ matrix.os == 'ubuntu-latest' && startsWith(matrix.onnx-version, 'git+') }}
      run: |
        git clone https://github.com/protocolbuffers/protobuf.git
        cd protobuf
        git checkout v3.16.0
        git submodule update --init --recursive
        mkdir build_source && cd build_source
        cmake ../cmake -Dprotobuf_BUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release
        make -j$(nproc)
        make install  
    - name: Install dependencies, ONNX ${{ matrix.onnx-version }}
      run: |
        pip install pytest tabulate ${{ matrix.tensorflow-version }}
        pip install ${{ matrix.onnx-version }}
        pip install -e .
    - name: Run Backend tests
      run: |
        python -m unittest discover test -v
